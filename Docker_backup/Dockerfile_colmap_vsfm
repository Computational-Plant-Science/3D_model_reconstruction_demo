FROM ubuntu:16.04

LABEL maintainer="Suxing Liu, Wes Bonelli"

RUN mkdir -p /opt/code
COPY / /opt/code

WORKDIR /opt/code

RUN apt-get update && \
    apt-get install -y tzdata 
    
RUN apt-get install -y \
    wget \
    build-essential \
    python3-setuptools \
    python3-pip \
    python3 \
    unzip \
    glew-utils \
    imagemagick \
    libgtk2.0-dev \
    libglew-dev \
    libdevil-dev \
    libboost-all-dev \
    libatlas-cpp-0.6-dev \
    libatlas-dev \
    libatlas-base-dev \
    liblapack3 \
    libblas3 \
    libblas-dev \
    libcminpack-dev \
    libgfortran3 \
    libmetis-edf-dev \
    libparmetis-dev \
    libjpeg-turbo8 \
    libgsl-dev \
    freeglut3-dev


###############################
# Get dependencies
RUN apt-get update && DEBIAN_FRONTEND=noninteractive apt-get install -y \
  cmake \
  build-essential \
  graphviz \
  git \
  coinor-libclp-dev \
  libceres-dev \
  libjpeg-dev \
  libpng-dev \
  libtiff-dev \
  libxi-dev \
  libxinerama-dev \
  libxcursor-dev \
  libxxf86vm-dev \
  apt-get autoclean && apt-get clean

# Boost
RUN apt-get -y install libboost-iostreams-dev libboost-program-options-dev libboost-system-dev libboost-serialization-dev

# CGAL
#RUN apt-get -y install libcgal-dev libcgal-qt5-dev

#GLFW3 (Optional)
#RUN apt-get -y install freeglut3-dev libglew-dev libglfw3-dev

# Install COLMAP dependencies
RUN DEBIAN_FRONTEND=noninteractive apt-get -y install \
  libboost-program-options-dev \
  libboost-filesystem-dev \
  libboost-graph-dev \
  libboost-regex-dev \
  libboost-system-dev \
  libboost-test-dev \
  libeigen3-dev \
  libsuitesparse-dev \
  libfreeimage-dev \
  libgoogle-glog-dev \
  libgflags-dev \
  libglew-dev \
  qtbase5-dev \
  libqt5opengl5-dev
  
# Build latest COLMAP
RUN git clone https://github.com/colmap/colmap.git --branch dev; \
  mkdir comap_build && cd comap_build; \
  cmake . ../colmap -DCMAKE_BUILD_TYPE=Release \
    -DCMAKE_INSTALL_PREFIX="/opt"; \
  make -j4 && make install; \
  cd .. && rm -rf comap_build
  
# Add binaries to path
ENV PATH $PATH:/opt/bin

RUN cd /opt/code && \
    make clean && \
    make all && \
    mkdir /lscratch /db /work /scratch && \
    chmod -R a+rwx /opt/code

ENV PATH=$PATH:/opt/code/vsfm/bin/
ENV LD_LIBRARY_PATH=$LD_LIBRARY_PATH:/opt/code/vsfm/bin/



RUN mkdir -p /opt/code/vsfm/bin/log && \
    mkdir -p /opt/code/vsfm/bin/temp/log && \
    touch /opt/code/vsfm/bin/temp/temp.pgm && \
    touch /opt/code/vsfm/bin/temp/temp.sift.sift && \
    ln -s /opt/code/vsfm/bin/temp/temp.pgm /opt/code/vsfm/bin/temp.pgm && \
    ln -s /opt/code/vsfm/bin/temp/temp.sift.sift /opt/code/vsfm/bin/temp.sift.sift && \
    ln -s /opt/code/vsfm/bin/temp/log /opt/code/vsfm/bin/log


